[
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/going-live/deploy-nextjs",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\nPublish Your Move Modules\nDeploy Your NextJS Frontend\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🚀 Going LiveDeploy Your NextJS Frontend\nDeploy Your NextJS Frontend\nSUGGESTION\n\nThe best way to publish your NextJS frontend is by connecting your GitHub repository to Vercel on the Vercel website. This way, it will automatically redeploy every time you push changes to the main branch.\n\nIf you prefer to manually deploy from the command line interface (CLI), run this command and follow the on-screen instructions:\n\nyarn vercel\n\n\nThis will generate a .vercel directory in your project where the configuration of your deployment is stored.\n\nAfter each deployment, you will be shown a new preview/test URL. On the Vercel website, you can promote the new deployment to production. Alternatively, to redeploy directly to the production URL from the command line, you can run:\n\nyarn vercel --prod\n\n\nVercel runs type and lint checks before building your app, and deployment will fail if there are any type or lint errors.\n\nTo ignore these checks while deploying from the CLI, use:\n\nyarn vercel:yolo\n\n\nIf you've connected your GitHub repository on the Vercel website, you can ignore type and lint checks by setting NEXT_PUBLIC_IGNORE_BUILD_ERROR to true in an environment variable.\n\nPrevious\nPublish Your Move Modules\nNext\n✅ Disabling Type and Linting Error Checks\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "Publish Your Move Modules | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/going-live/publish-move",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\nPublish Your Move Modules\nDeploy Your NextJS Frontend\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🚀 Going LivePublish Your Move Modules\nPublish Your Move Modules\n\nWhen publishing a new Move module, you must first initialize an Aptos account and fund it with the native token. You can use this command:\n\nyarn account\n\n\nThis command will create a new Aptos account, overwriting any existing account that is stored in packages/move/.aptos/config.yaml. It will also update the Move.toml file with the new address.\n\nTo publish your Move modules to the newly generated Aptos account, use this command:\n\nyarn deploy\n\n\nThis command publishes the Move modules and subsequently updates the deployedModules.ts file in the NextJS directory.\n\nIf you want to use external Move modules in your frontend, you can add their addresses in your Move.toml file. This will automatically generate an externalModules.ts file. For more details, refer to the external modules documentation.\n\nWARNING\n\nThe Aptos devnet is frequently reset, which can result in changes to the chainId. If this occurs, you should:\n\nRedeploy your modules (this process always uses the correct chainId)\nManually update the chainId for devnet in packages/nextjs/utils/scaffold-move/chains.ts\nPrevious\n🚀 Going Live\nNext\nDeploy Your NextJS Frontend\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "view | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/utils/view",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\nChains\ngetAllModules\ngetModule\nview\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🛠️ Utilsview\nview\n\nUse this function to call a View function on a Move Module.\n\nimport { view } from \"~~/utils/scaffold-move/view\";\n\nconst viewResult = await view(\n  {\n    module_address: module.address,\n    module_name: module.name,\n    function_name: fn.name,\n    ty_args: data.typeArgs,\n    function_args: data.args,\n  },\n  aptos,\n);\n\n\n\nThis example calls the View function.\n\nParameters​\nParameter\tType\tDescription\nmodule_address\tstring\tAddress of the module\nmodule_name\tstring\tName of the module\nfunction_name\tstring\tName of the function\nty_args (optional)\tstring[]\tType arguments\nfunction_args (optional)\tstring[]\tInput arguments for the view function\nReturn Value​\n\nReturns an array of Move values\n\nPrevious\ngetModule\nNext\n📡 Interacting with External Modules\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "getModule | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/utils/getmodule",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\nChains\ngetAllModules\ngetModule\nview\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🛠️ UtilsgetModule\ngetModule\n\nUse this function to get a module by name and chainId.\n\nimport { useTargetNetwork } from \"~~/hooks/scaffold-move/useTargetNetwork\";\nimport { getModule } from \"~~/utils/scaffold-move/modulesData\";\n\nconst { targetNetwork } = useTargetNetwork();\nconst moveModule = getModule(\"onchain_bio\", targetNetwork.id);\n\n\nThis example uses the getModule function to get the onchain_bio module deployed on the target network.\n\nParameters​\nParameter\tType\tDescription\nmodule_address\tstring\tName of the module\nchainId\tstring\tThe id for a chain/network\nReturn Value​\n\nReturns an object of type GenericModule:\n\nbytecode: The raw bytecode of the module.\nabi: An object that contains the following:\naddress: The address where the module is deployed.\nname: The name of the module.\nfriends: A list of module addresses that have access to private elements of the module.\nexposed_functions: A list of functions that the module exposes, which include their name, visibility, parameters, and return types.\nstructs: A list of data structures defined in the module, including their fields and type information.\nPrevious\ngetAllModules\nNext\nview\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "getAllModules | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/utils/getallmodules",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\nChains\ngetAllModules\ngetModule\nview\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🛠️ UtilsgetAllModules\ngetAllModules\n\nUse this function to get all modules by chainId.\n\nimport { useTargetNetwork } from \"~~/hooks/scaffold-move/useTargetNetwork\";\nimport { getAllModules } from \"~~/utils/scaffold-move/modulesData\";\n\nconst { targetNetwork } = useTargetNetwork();\nconst modulesData = getAllModules(targetNetwork.id);\n\n\nThis example uses the getAllModules function to get all modules deployed on the target network.\n\nParameters​\nParameter\tType\tDescription\nmodule_name\tstring\tName of the module\nchainId\tstring\tThe id for a chain/network\nReturn Value​\n\nReturns a list of GenericModule objects:\n\nbytecode: The raw bytecode of the module.\nabi: An object that contains the following:\naddress: The address where the module is deployed.\nname: The name of the module.\nfriends: A list of module addresses that have access to private elements of the module.\nexposed_functions: A list of functions that the module exposes, which include their name, visibility, parameters, and return types.\nstructs: A list of data structures defined in the module, including their fields and type information.\nPrevious\nChains\nNext\ngetModule\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "Chains | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/utils/chains",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\nChains\ngetAllModules\ngetModule\nview\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🛠️ UtilsChains\nChains\n\nIn chains.ts the different Aptos and Aptos-based chains are defined and exported as defaultChains.\n\nexport type Chain = {\n  id: string;\n  name: string;\n  network: Network;\n  fullnode?: string;\n  indexer?: string;\n  faucet?: string;\n  block_explorer?: string;\n};\n\n\nThe default Aptos chains only require the mandatory fields (id, name, and network). However, for custom chains, it's recommended to provide all fields to ensure a fully functional dapp.\n\nWARNING\n\nThe Aptos devnet is frequently reset, which can result in changes to the chainId. If this occurs, you should:\n\nRedeploy your modules (this process always uses the correct chainId)\nManually update the chainId for devnet in packages/nextjs/utils/scaffold-move/chains.ts\nParameters​\nParameter\tType\tDescription\nid\tstring\tAddress of the module\nname\tstring\tName of the module\nnetwork\tNetwork\tNetwork as defined in the Aptos TypeScript SDK\nindexer (optional)\tstring\tURL for the indexer\nfaucet (optional)\tstring\tURL for the faucet\nblock_explorer (optional)\tstring\tURL for the block explorer\nPrevious\n🛠️ Utils\nNext\ngetAllModules\nParameters\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "useView | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/useview",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseView\nuseView\n\nA hook to execute a view function on a Move module.\n\nUsage​\n\nCall this hook with the module name, function name, and optional arguments. It returns the result of the view function along with loading and error states.\n\nimport { useView } from \"~~/hooks/scaffold-move/useView\";\n\nconst { data, error, isLoading, refetch } = useView({\n  moduleName: \"onchain_bio\",\n  functionName: \"get_bio\",\n  args: [\"0x74cf40ecf85e057b72e42b6c6e7ba883477b9c36394ab4bdca051d1340c9d058\"]\n});\n\n\nThis example executes the get_bio view function on the ONCHAIN_BIO Move module, with one address argument.\n\nParameters​\nParameter\tType\tDescription\nmoduleName\tstring\tName of the Move module\nfunctionName\tstring\tName of the view function to call\nargs (optional)\tany[]\tArray of arguments to pass to the function\ntyArgs (optional)\tstring[]\tArray of type arguments for generic functions\nwatch (optional)\tboolean\tIf true, the hook will refetch data every 10 seconds\nReturn Value​\ndata: The result of the view function call, or null if not yet loaded.\nerror: An Error object if the call failed, or null if successful.\nisLoading: A boolean indicating whether the view function is currently being called.\nrefetch: A function to manually trigger a refetch of the data.\nNotes​\nThe hook will automatically fetch data when mounted and when any of its parameters change.\nIf watch is set to true, it will continue to refetch data every 10 seconds.\nYou can manually refetch data by calling the refetch function returned by the hook.\nIf any of the args are undefined, the hook will not attempt to fetch data.\nPrevious\nuseTargetNetwork\nNext\n🛠️ Utils\nUsage\nParameters\nReturn Value\nNotes\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/usetargetnetwork",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseTargetNetwork\nuseTargetNetwork\n\nThis hook retrieves the connected wallet's network from scaffold.config or defaults to the 0th network in the list if the wallet is not connected.\n\nUsage​\nconst network = useTargetNetwork();\n\nReturn Value​\nnetwork: The target network as Chain object.\nPrevious\nuseSubmitTransaction\nNext\nuseView\nUsage\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/usesubmittransaction",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseSubmitTransaction\nuseSubmitTransaction\n\nSubmit a transaction on a Move module.\n\nUsage​\n\nCall this hook with the module name as argument. To send a transaction, use submitTransaction with the function name and function arguments as input.\n\nimport useSubmitTransaction from \"~~/hooks/scaffold-move/useSubmitTransaction\";\n\nconst { submitTransaction, transactionResponse, transactionInProcess } = useSubmitTransaction(\"onchain_bio\");\n\nawait submitTransaction(\"register\", [\"my name\", \"example text\"]);\n\n\n\nThis example executes the register function on the ONCHAIN_BIO Move module, with two string arguments.\n\nParameters​\nParameter\tType\tDescription\nfunctionName\tstring\tName of the function to call\nargs (optional)\tany[]\tArray of arguments to pass to the function. Empty when no arguments are needed.\nReturn Value​\ntransactionInProcess: A bool, indicating whether or not the transaction is in process.\ntransactionResponse: The response is either TransactionResponseOnSubmission or TransactionResponseOnError.\nexport type TransactionResponseOnSubmission = {\n  transactionSubmitted: true;\n  transactionHash: string;\n  success: boolean; // indicates if the transaction submitted but failed or not\n  message?: string; // error message if the transaction failed\n};\n\nexport type TransactionResponseOnError = {\n  transactionSubmitted: false;\n  message: string;\n};\n\nPrevious\nuseGetModule\nNext\nuseTargetNetwork\nUsage\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/usegetmodule",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseGetModule\nuseGetModule\nuseGetModule​\n\nUse this hook to fetch a Move module, including the bytecode and ABI. The information if fetched from the deployedModules.ts and externalModules.ts.\n\nUsage​\nconst moveModule = useGetModule(\"onchain_bio\");\n\nParameters​\nParameter\tType\tDescription\nmoduleName\tstring\tName of the module\nReturn Value​\n\nReturns an object of type GenericModule:\n\nbytecode: The raw bytecode of the module.\nabi: An object that contains the following:\naddress: The address where the module is deployed.\nname: The name of the module.\nfriends: A list of module addresses that have access to private elements of the module.\nexposed_functions: A list of functions that the module exposes, which include their name, visibility, parameters, and return types.\nstructs: A list of data structures defined in the module, including their fields and type information.\nPrevious\nuseGetAccountResources\nNext\nuseSubmitTransaction\nuseGetModule\nUsage\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "useGetAccountResources | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/usegetaccountresources",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseGetAccountResources\nuseGetAccountResources\n\nUse this hook to fetch the resources that are available for an address.\n\nconst { data: accountResources, isLoading: accountResourcesLoading } = useGetAccountResources(address);\n\n\nThis example fetches all resources that are on this address.\n\nParameters​\nParameter\tType\tDescription\naddress (optional)\tstring\tAddress of the account. Uses the connected account address if no address is given.\noptions (optional)\tobject\tAdditional options for the query (e.g., retry settings)\nReturn Value​\nmoveResources: An array of MoveResource objects.\nPrevious\nuseGetAccountResource\nNext\nuseGetModule\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/usegetaccountresource",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseGetAccountResource\nuseGetAccountResource\n\nUse this hook to fetch a specific resource for an address.\n\nUsage​\nconst { data: accountResource, isLoading: accountResourceoading } = useGetAccountResource(address, \"onchain_bio\", \"bio\");\n\n\nThis example fetches a bio resource of the onchain_bio module for a predefined address.\n\nParameters​\nParameter\tType\tDescription\nmoduleName\tstring\tName of the module where the resource is defined.\nresourceName\tstring\tName of the Resource\naddress (optional)\tstring\tAddress of the account. Uses the connected account address if no address is given.\noptions (optional)\tobject\tAdditional options for the query (e.g., retry settings)\nReturn Value​\nT: An object where T is the type of the resource (defaults to any).\nPrevious\nuseGetAccountNativeBalance\nNext\nuseGetAccountResources\nUsage\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/usegetaccountnativebalance",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseGetAccountNativeBalance\nuseGetAccountNativeBalance\n\nUse this hook to fetch the MOVE balance for an address.\n\nUsage​\nconst balance = useGetAccountNativeBalance(address);\n\n\nThis example retrieves Move balance of the address and stores the details in the balance object.\n\nParameters​\nParameter\tType\tDescription\naddress (optional)\tstring\tAddress of the account to query. Uses the connected account address if no address is given.\nParameters​\nbalance: Object containing Move balance for this address.\nPrevious\nuseGetAccountModules\nNext\nuseGetAccountResource\nUsage\nParameters\nParameters\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/usegetaccountmodules",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseGetAccountModules\nuseGetAccountModules\n\nUse this hook to fetch the Move modules that are publish on an address.\n\nUsage​\nconst { data: accountModules, isLoading: accountModulesLoading } = useGetAccountModules(address);\n\n\nThis example fetches all modules that are published on this address.\n\nParameters​\nParameter\tType\tDescription\naddress\tstring\tAddress of the account.\nReturn Value​\nmoveModuleBytecode[]: A list of MoveModuleBytecode objects.\nPrevious\nuseGetAccountModule\nNext\nuseGetAccountNativeBalance\nUsage\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "useGetAccountModule | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/usegetaccountmodule",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseGetAccountModule\nuseGetAccountModule\n\nUse this hook to fetch the Move module that is published on an address by name.\n\nUsage​\nconst { data: accountModule, isLoading: accountModuleLoading } = useGetAccountModule(address, moduleNam e);\n\n\nThis example fetches all modules that are published on this address.\n\nParameters​\nParameter\tType\tDescription\naddress\tstring\tAddress of the account.\nmoduleName\tstring\tName of the module\nReturn Value​\nmoveModuleBytecode: A MoveModuleBytecode object.\nPrevious\nuseDeployedModuleInfo\nNext\nuseGetAccountModules\nUsage\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/usedeployedmoduleinfo",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseDeployedModuleInfo\nuseDeployedModuleInfo\n\nUse this hook to fetch details about a deployed Move module, including the ABI and address. The information if fetched from the blockchain.\n\nUsage​\nconst { data: deployedModuleData, isLoading: deployedModuleLoading } = useDeployedModuleInfo(\"onchain_bio\");\n\n\n\nThis example retrieves the details of the deployed module named onchain_bio and stores the details in the deployedModuleData object.\n\nParameters​\nParameter\tType\tDescription\nmoduleName\tstring\tName of the module\nReturn Value​\ndata: Object containing address and abi of module.\nPrevious\nuseAptosClient\nNext\nuseGetAccountModule\nUsage\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "useAptosClient | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/useaptosclient",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 HooksuseAptosClient\nuseAptosClient\n\nUse this hook to get an Aptos client connected to the defined chain.\n\nUsage​\nconst aptos = useAptosClient(chainId);\n\n\nThis example uses the useAptosClient hook to retrieve the Aptos client for chainId.\n\nParameters​\nParameter\tType\tDescription\nchainId\tstring\tThe id for the chain as defined in defaultChains.\nReturn Value​\ndata: Object containing address and abi of contract.\nPrevious\n🪝 Hooks\nNext\nuseDeployedModuleInfo\nUsage\nParameters\nReturn Value\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/components/custom-connect-button",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\nAddress\nBalance\nCustomConnectButton\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🧩 ComponentsCustomConnectButton\nCustomConnectButton\n\nScaffold Move includes a custom Wallet Connect button with the following features:\n\nBalance Display: Shows native token balance of connected address.\nChain Name: Displays connected blockchain name.\nCustom Modal: Offers address copying, QR code view, block explorer link, network switching, and disconnect option.\nScreenshot​\n\nUsage​\nimport { CustomConnectButton } from \"~~/components/scaffold-move\";\n<CustomConnectButton />\n\nPrevious\nBalance\nNext\n🪝 Hooks\nScreenshot\nUsage\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/components/%20balance",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\nAddress\nBalance\nCustomConnectButton\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🧩 ComponentsBalance\nBalance\n\nDisplays the balance of a given address in the native token (APT).\n\nScreenshot​\n\nUsage​\nimport { Balance } from \"~~/components/scaffold-move\";\nimport { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n\nconst { account, connected } = useWallet();\n<Balance address={account?.address as string} />\n\nParameter​\nParameter\tType\tDefault Value\tDescription\naddress\tstring\tundefined\tAddress in 0x___ format.\nclassName (optional)\tstring\t\"\"\tProp to pass additional CSS styling to the component, where you can use Tailwind / daisyUI classes for styling.\nPrevious\nAddress\nNext\nCustomConnectButton\nScreenshot\nUsage\nParameter\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "Address | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/components/address",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\nAddress\nBalance\nCustomConnectButton\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🧩 ComponentsAddress\nAddress\n\nDisplay an address with a copy-to-clipboard icon and a visual blockie representation. The component offers the following features:\n\nShows a shortened or full address format\nProvides a clickable link to the block explorer (can be disabled)\nDisplays a blockie image unique to the address\nIncludes a copy icon for easy address copying\n\nWhen clicked, the address links to:\n\nThe block explorer of the connected wallet's network (if a wallet is connected)\nThe block explorer of the first network in targetNetworks (if no wallet is connected)\n\nThis component is useful for displaying user addresses, contract addresses, or any Aptos address in a user-friendly manner.\n\nUsage​\nimport { Address } from \"~~/components/scaffold-move\";\nimport { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n\nconst { account: connectedAccount } = useWallet();\n<Address address={connectedAccount?.address} />\n\nParameter​\nParameter\tType\tDefault Value\tDescription\naddress\tstring\tundefined\tAptos address in 0x___ format.\ndisableAddressLink (optional)\tboolean\tfalse\tIf true, disables the block explorer link when clicking on the address.\nformat (optional)\tstring\t\"short\"\tDisplay format of the address. \"short\" shows first five characters, \"long\" shows the entire address.\nsize (optional)\tstring\t\"base\"\tSize of the Address component. Options: \"xs\", \"sm\", \"base\", \"lg\", \"xl\", \"2xl\", \"3xl\". base is default.\nPrevious\n🧩 Components\nNext\nBalance\nUsage\nParameter\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/contributing/",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🙏 Contributing to Scaffold Move\n🙏 Contributing to Scaffold Move\n\nScaffold Move has successfully implemented core features essential for Move developers, providing a robust foundation for building decentralized applications. The current version offers a streamlined development experience with hot module reloading, custom hooks, and seamless wallet integration.\n\nNew features planned:​\nAdd a testing framework for Move modules.\nAdd custom networks to network switching. This is currently not available in the Aptos Wallet Adapter. Once our PR is merged, this feature will be added to Scaffold Move.\nEnhance documentation and tutorials for easier onboarding.\nMigrate documentation from Gitbook to Docusaurus.\nDevelop additional pre-built components for common dApp functionalities.\nIntegrate different templates/configurations (similar to create-aptos-dapp)\nContributing​\n\nWe're committed to evolving Scaffold Move based on community feedback and emerging best practices in the Move ecosystem. For a detailed list of upcoming features and to contribute ideas, please check our GitHub Issues.\n\nCommunity​\n\nYour input is valuable! If you have suggestions or want to contribute, we encourage you to get involved and help shape the future of Scaffold Move. Join our developer Telegram channel to connect with the community and stay updated on the latest developments.\n\nPrevious\n✅ Disabling Type and Linting Error Checks\nNew features planned:\nContributing\nCommunity\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "✅ Disabling Type and Linting Error Checks | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/disable-type-linting-error-checks/",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n✅ Disabling Type and Linting Error Checks\n✅ Disabling Type and Linting Error Checks\n\nTypeScript helps you catch errors at compile time, which can save time and improve code quality, but can be challenging for those who are new to the language or who are used to the more dynamic nature of JavaScript. These sections show the steps required to disable type & lint checks on different levels.\n\nDisabling Commit Checks ​\n\nWe run the pre-commit git hook which lints the staged files and doesn't let you commit if there is an linting error.\n\nTo disable this, go to the .husky/pre-commit file and comment out yarn lint-staged --verbose\n\n- yarn lint-staged --verbose\n+ # yarn lint-staged --verbose\n\nDeploying to Vercel Without Any Checks ​\n\nBy default, Vercel runs type and lint checks before building your app. The deployment will fail if there are any type or lint errors.\n\nTo ignore these checks while deploying from the CLI, use:\n\nyarn vercel:yolo\n\n\nIf your repo is connected to Vercel, you can set NEXT_PUBLIC_IGNORE_BUILD_ERROR to true in an environment variable.\n\nDisabling GitHub Workflow ​\n\nWe have a GitHub workflow setup checkout .github/workflows/lint.yaml which runs type and lint error checks every time code is pushed to main branch or pull request is made to main branch.\n\nTo disable it, delete .github directory.\n\nPrevious\nDeploy Your NextJS Frontend\nNext\n🙏 Contributing to Scaffold Move\nDisabling Commit Checks\nDeploying to Vercel Without Any Checks\nDisabling GitHub Workflow\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/category/-going-live",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\nPublish Your Move Modules\nDeploy Your NextJS Frontend\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🚀 Going Live\n🚀 Going Live\n\nHow to publish your Move modules to the Aptos network and deploy your NextJSfrontend on Vercel.\n\n📄️ Publish Your Move Modules\n\nWhen publishing a new Move module, you must first initialize an Aptos account and fund it with the native token. You can use this command:\n\n📄️ Deploy Your NextJS Frontend\n\nThe best way to publish your NextJS frontend is by connecting your GitHub repository to Vercel on the Vercel website. This way, it will automatically redeploy every time you push changes to the main branch.\n\nPrevious\n📡 Interacting with External Modules\nNext\nPublish Your Move Modules\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/external-modules/",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n📡 Interacting with External Modules\n📡 Interacting with External Modules\n\nIf you need to interact with external modules (i.e., modules not deployed from your Scaffold Move repo), you can add external module data in two ways.\n\nEdit externalModules.ts​\n\nTo add or modify external modules manually, you can add the module ABIs to your packages/nextjs/modules/externalModules.ts file in the following format:\n\n/**\n * @example\n * const externalModules = {\n *   1: {\n *     treasury: {\n *       bytecode: \"0x...\",\n *       abi: {\n           address: \"0x...\",\n           name: \"treasury\",\n           friends: [...],\n           exposed_functions: [...],\n           structs: [...]\n         },\n *     },\n *   },\n * } as const;\n */\n\n\nIn the example above, it shows some dummy values for adding a treasury module deployed on mainnet (chainId 1).\n\nEdit Move.toml​\n\nTo generate an externalModules.ts file automatically after deployment, you can add the addresses of the external modules to your packages/move/Move.toml file. The post-deploy script will update the externalModules.ts file with the modules linked to any address added in Move.toml after each deployment.\n\nThis approach is particularly useful when you want to maintain a consistent and up-to-date reference to external modules across your project. By centralizing the external module addresses in the Move.toml file, you ensure that all parts of your application are using the correct and most recent module addresses.\n\n[package]\nname = 'onchain_bio'\nversion = '1.0.0'\n[dependencies.AptosFramework]\ngit = 'https://github.com/aptos-labs/aptos-core.git'\nrev = 'main'\nsubdir = 'aptos-move/framework/aptos-framework'                                                                                   \n\n[addresses]\nOnchainBio='0x1f61b83497e279044679e283e66513e6bb50d4e3145ceed7218fa443d91450ec'\nOtherModule='0x0a596e253fe1584d6c04bbc9c662faaa1e41a6141f2a458f52d5e5512e38fb9a'\n\n\nThis is an example of a Move.toml file that includes references to external modules. The OnchainBio address is for the module deployed from this Scaffold Move repo, while OtherModule represents an external module. You can add multiple external module addresses here, ensuring each name is unique. The names you choose (like \"OtherModule\") are for your reference only; the actual module names will be fetched from the blockchain when updating the externalModules.ts file.\n\nPrevious\nview\nNext\n🚀 Going Live\nEdit externalModules.ts\nEdit Move.toml\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🛠️ Utils | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/category/%EF%B8%8F-utils",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\nChains\ngetAllModules\ngetModule\nview\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🛠️ Utils\n🛠️ Utils\n\nScaffold Move has a set of utility functions to help you interact.\n\n📄️ Chains\n\nIn chains.ts the different Aptos and Aptos-based chains are defined and exported as defaultChains.\n\n📄️ getAllModules\n\nUse this function to get all modules by chainId.\n\n📄️ getModule\n\nUse this function to get a module by name and chainId.\n\n📄️ view\n\nUse this function to call a View function on a Move Module.\n\nPrevious\nuseView\nNext\nChains\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/hooks/",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\nuseAptosClient\nuseDeployedModuleInfo\nuseGetAccountModule\nuseGetAccountModules\nuseGetAccountNativeBalance\nuseGetAccountResource\nuseGetAccountResources\nuseGetModule\nuseSubmitTransaction\nuseTargetNetwork\nuseView\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🪝 Hooks\n🪝 Hooks\n\nScaffold Move provides a collection of custom React hooks designed to simplify interactions with your deployed Move modules. These hooks offer an easy-to-use interface for reading from and writing to your Move modules.\n\nThe custom hooks rely on three main files for their functionality:\n\npackages/nextjs/modules/deployedModules.ts\npackages/nextjs/modules/externalModules.ts\nscaffold.config.ts\n\nThe deployedModules.ts file is auto-generated and updated whenever you run yarn publish --network. It organizes module addresses and ABIs based on the chainId.\n\nPrevious\nCustomConnectButton\nNext\nuseAptosClient\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🧩 Components | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/category/-components",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\nAddress\nBalance\nCustomConnectButton\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🧩 Components\n🧩 Components\n\nExplore the reusable components provided by Scaffold Move for building Aptos dApps efficiently.\n\n📄️ Address\n\nDisplay an address with a copy-to-clipboard icon and a visual blockie representation. The component offers the following features:\n\n📄️ Balance\n\nDisplays the balance of a given address in the native token (APT).\n\n📄️ CustomConnectButton\n\nScaffold Move includes a custom Wallet Connect button with the following features:\n\nPrevious\n🏃‍♂️ Quickstart\nNext\nAddress\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/quickstart/",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n🏃‍♂️ Quickstart\n🏃‍♂️ Quickstart\nRequirements​\n\nBefore you begin, you need to install the following tools:\n\nNode (>= v18.17)\nYarn (v1 or v2+)\nGit\nAptos CLI\nQuickstart​\n\nTo get started with Scaffold-Move, follow the steps below:\n\nClone this repo & install dependencies\ngit clone https://github.com/arjanjohan/scaffold-move.git\ncd scaffold-move\nyarn install\n\nRun a local network in the first terminal:\nyarn chain\n\n\nIf you are deploying to devnet or testnet, you can skip this step.\n\nOn a second terminal, initialize a new account.\nyarn account\n\n\nThis command overwrites packages/move/.aptos/config.yaml with a new Aptos account. The new address is copied over to the first address in the Move.toml file. If no address exists in this file, it is added on a new line.\n\nDeploy the test modules:\nyarn deploy\n\n\nThis command deploys the move modules to the selected network. The modules are located in packages/move/sources and can be modified to suit your needs. The yarn deploy command uses aptos move publish to publish the modules to the network. After this is executes the script located in scripts/loadContracts.js to make the new modules available in the nextjs frontend.\n\nOn a third terminal, start your NextJS app:\nyarn start\n\n\nVisit your app on: http://localhost:3000. You can interact with your Move modules using the Debug Modules page. You can tweak the app config in packages/nextjs/scaffold.config.ts.\n\nWhat's next:\n\nEdit your Move module OnchainBio.move in packages/move/sources\nEdit your frontend homepage at packages/nextjs/app/page.tsx. For guidance on routing and configuring pages/layouts checkout the Next.js documentation.\nPrevious\n🔗 Links\nNext\n🧩 Components\nRequirements\nQuickstart\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🔗 Links | 🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/links",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🔗 Links\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n👋 Intro🔗 Links\n🔗 Links\n\nBelow are some relevant links for developing with Scaffold Move or Move in general.\n\nLinks​\nScaffold Move Github\nScaffold Move Docs Github\nScaffold Move Deployment\nScaffold Move Docs Deployment\nMove docs​\nAptos Developer Documentation\nAptos Developer Setup\nBuild an End-to-End Dapp on Aptos\nThe Move Book\nPrevious\n👋 Intro\nNext\n🏃‍♂️ Quickstart\nLinks\nMove docs\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  },
  {
    "title": "🏗 Scaffold Move Docs",
    "url": "https://scaffold-move-docs.vercel.app/",
    "html": "Skip to main content\n🏗 Scaffold Move Docs\nGitHub Docs\nGitHub Scaffold Move\n👋 Intro\n🔗 Links\n🏃‍♂️ Quickstart\n🧩 Components\n🪝 Hooks\n🛠️ Utils\n📡 Interacting with External Modules\n🚀 Going Live\n✅ Disabling Type and Linting Error Checks\n🙏 Contributing to Scaffold Move\n👋 Intro\n👋 Intro\n\n🧪 Scaffold Move is an open-source, cutting-edge toolkit for building decentralized applications (dApps) on Aptos or any other Move-based blockchain. It's designed to streamline the process of creating and deploying Move modules and building user interfaces that interact seamlessly with those modules.\n\n⚙️ Built using Move, Aptos TS SDK, Next.js, Tailwind CSS, and TypeScript.\n\n🛫 Deployment Scripts: Simplify and automate your deployment workflow.\n✅ Module Hot Reload: Your frontend automatically adapts to changes in your Move modules as you edit them.\n🪝 Custom Hooks: A collection of React hooks to simplify interactions with Move modules.\n🧱 Components: A library of common Web3 components to rapidly build your frontend.\n🔐 Wallet Integration: Connect to any Aptos-compatible wallet and interact with the Aptos network directly from your frontend.\n\nPerfect for hackathons, prototyping, or launching your next Move project!\n\nNext\n🔗 Links\nBuilt by arjanjohan\nX\nGitHub\nGithub\nScaffold Move\nDocs\nCommunity\nTelegram\nCopyright © 2024 arjanjohan. Built with Docusaurus."
  }
]