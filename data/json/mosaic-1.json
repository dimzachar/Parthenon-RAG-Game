[
  {
    "title": "Links | Mosaic Docs",
    "url": "https://docs.mosaic.ag/others/links",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nLinks\n\nhttps://mosaic.ag/ https://discord.gg/mosaicagg https://x.com/mosaicagg\n\nWebsite: https://mosaic.ag/ \n\nDiscord: https://discord.gg/mosaicagg \n\nTwitter: https://x.com/mosaicagg\n\nPrevious\nPrivacy Policy\n\nLast updated 1 month ago"
  },
  {
    "title": "Privacy Policy | Mosaic Docs",
    "url": "https://docs.mosaic.ag/security-and-license/privacy-policy",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nPrivacy Policy\nPrevious\nTerms of Use\nNext\nLinks"
  },
  {
    "title": "Terms of Use | Mosaic Docs",
    "url": "https://docs.mosaic.ag/security-and-license/terms-of-use",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nTerms of Use\nPrevious\nAudits\nNext\nPrivacy Policy"
  },
  {
    "title": "Typescript SDK | Mosaic Docs",
    "url": "https://docs.mosaic.ag/swap-integration/markdown",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nTypescript SDK\nhttps://www.npmjs.com/package/@mosaic-ag/ts-sdk\n1. Importing Required Modules\n\nFirst, we need to import the necessary modules and dependencies for the Aptos Movement blockchain transactions and swap data retrieval:\n\nCopy\nimport { getSwapData } from '@mosaic-ag/ts-sdk';\n\nimport { Aptos, AptosConfig, Network, APTOS_COIN, Ed25519PublicKey, Ed25519PrivateKey, Account } from '@aptos-labs/ts-sdk';\n\nimport invariant from 'tiny-invariant';\n2. Setting Up Constants\n\nNext, define the constants that will be used throughout the script. These include wallet addresses, keys, and asset identifiers:\n\nCopy\nexport const TEST_WALLET_ADDRESS = ''; // change me\n\nexport const TEST_PRIVATE_KEY = ''; // change me\n\nexport const TEST_PUBLIC_KEY = ''; // change me\n\nexport const USDC = '0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::USDC';\n\nexport const SLIPPAGE_BPS = 50;\n3. Configuring Aptos Movement\n\nSet up the configuration for the Aptos Movement blockchain network:\n\nCopy\nconst aptosConfig = new AptosConfig({ network: Network.CUSTOM, fullnode: \"https://aptos.testnet.suzuka.movementlabs.xyz/v1\" })\n\nexport const aptos = new Aptos(aptosConfig);\n4. Retrieving Swap Data\n\nRetrieve the necessary swap data for the transaction using the getSwapData function:\n\nCopy\nconst swapData = await getSwapData({\n\n  tokenIn: APTOS_COIN,\n\n  tokenOut: USDC,\n\n  amountIn: '1000000',\n\n  slippageBps: 50, // 0.5%\n\n  feeRecipient: '0x24570782d195e458b6e67c52e373ad1c54e18b4ac41e7b4cd2cddec255e42ffb',\n\n  feeBps: 50, // 0.5%\n\n  chargeFeeBy: 'token_in', // token_in\n\n});\n5. Building the Transaction\n\nBuild a simple transaction with the swap data retrieved:\n\nCopy\nconst transaction = await aptos.transaction.build.simple({\n\n  sender: TEST_WALLET_ADDRESS,\n\n  data: {\n\n    function: swapData.function,\n\n    functionArguments: swapData.functionArguments,\n\n    typeArguments: swapData.typeArguments,\n\n  },\n\n});\n6. Simulating the Transaction\n\nSimulate the transaction to ensure it will succeed:\n\nCopy\nconst simulateResponse = await aptos.transaction.simulate.simple({\n\n  signerPublicKey: new Ed25519PublicKey(TEST_PUBLIC_KEY),\n\n  transaction,\n\n});\n\n\n\ninvariant(simulateResponse.length === 1, `unexpected error, simulateResponse = ${JSON.stringify(simulateResponse)}`);\n\ninvariant(simulateResponse[0].success, 'simulate failed');\n7. Signing and Submitting the Transaction\n\nSign and submit the transaction using the private key:\n\nCopy\nconst pendingTxResponse = await aptos.transaction.signAndSubmitTransaction({\n\n  signer: Account.fromPrivateKey({ privateKey: new Ed25519PrivateKey(TEST_PRIVATE_KEY) }),\n\n  transaction,\n\n});\n8. Waiting for Transaction Confirmation\n\nWait for the transaction to be confirmed on the blockchain:\n\nCopy\nconst committedTxResponse = await aptos.transaction.waitForTransaction({ transactionHash: pendingTxResponse.hash });\n\ninvariant(committedTxResponse.success, 'transaction failed');\n9. Logging the Transaction Result\n\nFinally, log the success message with the transaction details:\n\nCopy\nconsole.log(`Success. https://explorer.movementnetwork.xyz/txn/${committedTxResponse.version}?network=testnet`);\n\nEach block of code corresponds to a specific step in the process of setting up, building, simulating, signing, submitting, and confirming a transaction on the Aptos blockchain. This structure helps in understanding the flow and individual responsibilities of each part of the script.\n\nPrevious\nAPI\nNext\nAudits\n\nLast updated 25 days ago\n\nhttps://www.npmjs.com/package/@mosaic-ag/ts-sdk\n1. Importing Required Modules"
  },
  {
    "title": "Audits | Mosaic Docs",
    "url": "https://docs.mosaic.ag/security-and-license/audits",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nAudits\nPrevious\nTypescript SDK\nNext\nTerms of Use"
  },
  {
    "title": "API | Mosaic Docs",
    "url": "https://docs.mosaic.ag/swap-integration/editor",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nAPI\n\nWelcome to the Mosaic Router API documentation. This section offers in-depth instructions on using the GET /v1/quote endpoint to obtain the best swap quotes via the Mosaic Router. This endpoint is essential for developers aiming to incorporate Mosaic's robust routing features into their applications, ensuring users achieve swaps at the most favorable rates.\n\nWith the API, you can define the source (srcCoinType) and destination (dstCoinType) coin types, specify the swap amount, and choose whether to include or exclude certain liquidity sources, allowing you to customize the routing to meet your specific requirements. This documentation will walk you through each parameter, providing the necessary guidance to seamlessly integrate and maximize the benefits of Mosaic's liquidity aggregation on Movement.\n\nSwagger\nGet Quote\n\nFind the best quote to swap with Mosaic Aggregator\n\nGEThttp://mosaic.kitelabs.io/v1/quote\nQuery parameters\nResponse\n200\n\nSuccessfully found quote\n\nBody\napplication/json\ncodestring\n\nResponse code\n\nExample: 0\nmessagestring\n\nResponse message\n\nExample: \"successfully\"\nrequestIdstring\n\nInternal request identity for tracing/troubleshooting\n\nExample: \"f4f7aa6b2dec13ae9fe36d7622fa83f4\"\ndataobject\nRequest\nJavaScript\nCurl\nPython\nCopy\nconst response = await fetch('http://mosaic.kitelabs.io/v1/quote', {\n\n    method: 'GET',\n\n    headers: {},\n\n});\n\nconst data = await response.json();\nTest it\nResponse\n200\nCopy\n{\n\n  \"code\": 0,\n\n  \"message\": \"successfully\",\n\n  \"requestId\": \"f4f7aa6b2dec13ae9fe36d7622fa83f4\",\n\n  \"data\": {\n\n    \"srcCoinType\": \"0x1::aptos_coin::AptosCoin\",\n\n    \"dstCoinType\": \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::USDC\",\n\n    \"feeCoinType\": \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::USDC\",\n\n    \"srcAmount\": 100000,\n\n    \"dstAmount\": 2056477,\n\n    \"feeAmount\": 100000,\n\n    \"paths\": [\n\n      {\n\n        \"poolId\": \"0x65c7939df25c4986b38a6af99602bf17daa1a2d7b53e6847ed25c04f74f54607::RazorSwapPool::LiquidityPool<0x1::aptos_coin::AptosCoin, 0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::USDT>\",\n\n        \"source\": \"razor_swap\",\n\n        \"sourceType\": \"razor_swap\",\n\n        \"srcCoinType\": \"0x1::aptos_coin::AptosCoin\",\n\n        \"dstCoinType\": \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::USDC\",\n\n        \"srcAmount\": 100000,\n\n        \"dstAmount\": 2056477,\n\n        \"metadata\": {\n\n          \"isXToY\": true\n\n        }\n\n      }\n\n    ]\n\n  }\n\n}\nGet Tokens\n\nRetrieve tokens based on IDs, cursor, count, and pattern\n\nGEThttp://mosaic.kitelabs.io/v1/tokens\nQuery parameters\nResponse\n200\n\nA list of tokens and the next cursor for pagination.\n\nBody\napplication/json\ntokenByIdobject\nnextCursorinteger (uint64)\nRequest\nJavaScript\nCurl\nPython\nCopy\nconst response = await fetch('http://mosaic.kitelabs.io/v1/tokens', {\n\n    method: 'GET',\n\n    headers: {},\n\n});\n\nconst data = await response.json();\nTest it\nResponse\n200\nCopy\n{}\n\n\n\n\n\nPrevious\nSupported DEXs on Movement\nNext\nTypescript SDK\n\nLast updated 26 days ago\n\nOn this page"
  },
  {
    "title": "Supported DEXs on Movement | Mosaic Docs",
    "url": "https://docs.mosaic.ag/user-guides/supported-dexs-on-movement",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nSupported DEXs on Movement\nPrevious\nSwap\nNext\nAPI"
  },
  {
    "title": "New to Movement? Install your wallet | Mosaic Docs",
    "url": "https://docs.mosaic.ag/user-guides/quickstart",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nNew to Movement? Install your wallet\n\nCurrently, Mosaic supports Razor Wallet and Nightly Wallet, 2 wallets for Movement Network. All transactions on Mosaic are securely executed through Web3 Wallets, allowing you to fully leverage Mosaic's on-chain features without compromising your privacy.\n\nPrevious\nWelcome\nNext\nSwap\n\nLast updated 1 month ago"
  },
  {
    "title": "Swap | Mosaic Docs",
    "url": "https://docs.mosaic.ag/user-guides/publish-your-docs",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nSwap\nPrevious\nNew to Movement? Install your wallet\nNext\nSupported DEXs on Movement\n\nLast updated 1 month ago"
  },
  {
    "title": "Welcome | Mosaic Docs",
    "url": "https://docs.mosaic.ag/",
    "html": "Mosaic Docs\nSearch\nCtrlâ€†+â€†K\nðŸŸ¡\nWelcome\nUSER GUIDES\nNew to Movement? Install your wallet\nSwap\nSupported DEXs on Movement\nSWAP INTEGRATION\nAPI\nTypescript SDK\nSECURITY AND LICENSE\nAudits\nTerms of Use\nPrivacy Policy\nOTHERS\nLinks\nPowered by GitBook\nðŸŸ¡\nWelcome\n\nMosaic envisions a world where anyone can trade their funds freely, reliably, and effortlessly on their own terms. Built natively on Movement and grounded in DeFi principles of open access, Mosaic is a DEX Aggregator and DeFi hub that empowers users with the insights and tools to trade without intermediaries. It offers a fast, secure, and user-friendly platform. No matter your path to financial autonomy, Mosaic has you covered.\n\nWhether you are a developer looking to integrate with our platform, a trader seeking to understand our features, or a new user curious about decentralized exchange, youâ€™ve come to the right place. This documentation provides comprehensive guides, detailed API references, and all the resources you need to effectively utilize Mosaic.\n\nJump right in\n\nUser Guides\n\nSwap Integration\n\nSecurity and License\n\nNext\nNew to Movement? Install your wallet\n\nLast updated 1 month ago"
  }
]